:where(:root),
:where([data-theme="#{$text-input-group}"]) {
  --#{$text-input-group}--RowGap: var(--pf-t--global--spacer--xs);

  // --#{$text-input-group}--ColumnGap: var(--pf-t--global--spacer--sm);
  --#{$text-input-group}--BorderRadius: var(--pf-t--global--border--radius--small);
  --#{$text-input-group}--BackgroundColor: var(--pf-t--global--background--color--control--default);
  --#{$text-input-group}--BorderWidth: var(--pf-t--global--border--width--control--default);
  --#{$text-input-group}--BorderColor: var(--pf-t--global--border--color--default);
  --#{$text-input-group}--hover--BorderColor: var(--pf-t--global--border--color--brand--hover);
  --#{$text-input-group}--focus-within--BorderColor: var(--pf-t--global--border--color--brand--clicked);
  --#{$text-input-group}--focus-within--BorderWidth: var(--pf-t--global--border--width--control--active);
  --#{$text-input-group}--before--ZIndex: var(--pf-t--global--Zindex--xs);

  // * Text input group main icon text input
  --#{$text-input-group}__main--m-icon__text-input--PaddingInlineStart: var(--pf-t--global--spacer--xl);

  // * Text input group text input
  --#{$text-input-group}__text-input--PaddingBlock: var(--pf-t--global--spacer--sm);
  --#{$text-input-group}__text-input--PaddingInline: var(--pf-t--global--spacer--sm);
  --#{$text-input-group}__text-input--MinWidth: 12ch;
  --#{$text-input-group}__text-input--BackgroundColor: transparent;
  --#{$text-input-group}__text-input--m-hint--Color: var(--pf-t--global--text--color--placeholder);
  --#{$text-input-group}__text-input--placeholder--Color: var(--pf-t--global--text--color--placeholder);

  // * Text input group icon
  --#{$text-input-group}__icon--Left: var(--pf-t--global--spacer--sm);
  --#{$text-input-group}__icon--Color: var(--pf-t--global--text--color--placeholder);
  --#{$text-input-group}__icon--TranslateY: -50%;

  // * Text input group utilities
  --#{$text-input-group}__utilities--ColumnGap: var(--pf-t--global--spacer--sm);
  --#{$text-input-group}__utilities--button--MinWidth: #{pf-size-prem(34px)};
  --#{$text-input-group}__utilities--button--PaddingInline: 0;

  // * Text input group chip group
  --#{$text-input-group}--c-chip-group__main--PaddingBlock: var(--pf-t--global--spacer--xs);
  --#{$text-input-group}--c-chip-group__main--PaddingInlineEnd: var(--pf-t--global--spacer--xs);

  // * Text input group disabled
  --#{$text-input-group}--m-disabled--Color: var(--pf-t--global--text--color--on-disabled);
  --#{$text-input-group}--m-disabled--BackgroundColor: var(--pf-t--global--background--color--disabled--default);
}

// - Text input group - Text input group main - Text input group group - Text input group utilities
.#{$text-input-group},
.#{$text-input-group}__main,
.#{$text-input-group}__group,
.#{$text-input-group}__utilities {
  display: flex;
}

// - Text input group - Text input group text - Text input group text input
.#{$text-input-group},
.#{$text-input-group}__text,
.#{$text-input-group}__text-input {
  position: relative;
}

// - Text input group
.#{$text-input-group} {
  width: 100%; // when child of flex layout, take up space
  overflow: hidden;
  color: var(--#{$text-input-group}--Color, inherit);
  background-color: var(--#{$text-input-group}--BackgroundColor);
  border-radius: var(--#{$text-input-group}--BorderRadius);

  &::before {
    position: absolute;
    inset: 0;
    z-index: var(--#{$text-input-group}--before--ZIndex);
    pointer-events: none;
    content: "";
    border: var(--#{$text-input-group}--BorderWidth) solid var(--#{$text-input-group}--BorderColor); // use after pseudo to present border on top of items
    border-radius: inherit;
  }

  &:hover {
    --#{$text-input-group}--BorderColor: var(--#{$text-input-group}--hover--BorderColor);
  }

  &.pf-m-plain {
    --#{$text-input-group}--BackgroundColor: transparent;

    .#{$text-input-group}__text {
      &::before {
        border: 0;
      }
    }
  }

  &:is(:focus, :focus-within, :focus-visible) {
    --#{$text-input-group}--BorderColor: var(--#{$text-input-group}--focus-within--BorderColor);
    --#{$text-input-group}--BorderWidth: var(--#{$text-input-group}--focus-within--BorderWidth);

    &::before {
      z-index: 100;
    }
  }

  &:is(:disabled, [disabled], .pf-m-disabled, [disabled="true"]) {
    --#{$text-input-group}--Color: var(--#{$text-input-group}--m-disabled--Color);
    --#{$text-input-group}--icon--Color: var(--#{$text-input-group}--m-disabled--Color);
    --#{$text-input-group}--BackgroundColor: var(--#{$text-input-group}--m-disabled--BackgroundColor);
    --#{$text-input-group}__icon--Color: var(--#{$text-input-group}--m-disabled--Color);

    pointer-events: none;

    * {
      mix-blend-mode: initial;
    }
  }
}

// - Text input group main
.#{$text-input-group}__main {
  flex: 1;
  flex-wrap: wrap;
  row-gap: var(--#{$text-input-group}__main--RowGap, var(--#{$text-input-group}--RowGap));
  column-gap: var(--#{$text-input-group}__main--ColumnGap, var(--#{$text-input-group}--ColumnGap));
  min-width: 0;

  &.pf-m-icon {
    --#{$text-input-group}__text-input--PaddingInlineStart: var(--#{$text-input-group}__main--m-icon__text-input--PaddingInlineStart);
  }

  .#{$chip-group}__main {
    padding-block-start: var(--#{$text-input-group}--c-chip-group__main--PaddingBlockStart, var(--#{$text-input-group}--c-chip-group__main--PaddingBlock));
    padding-block-end: var(--#{$text-input-group}--c-chip-group__main--PaddingBlockEnd, var(--#{$text-input-group}--c-chip-group__main--PaddingBlock));
    padding-inline-end: var(--#{$text-input-group}--c-chip-group__main--PaddingInlineEnd);
  }
}

// - Text input group utilties
.#{$text-input-group}__utilities {
  @include pf-v5-button-proportional('.#{$button}');

  column-gap: var(--#{$text-input-group}__utilities--ColumnGap);
  align-items: center;
  padding-inline-start: var(--#{$text-input-group}__utilities--PaddingInlineStart, var(--#{$text-input-group}__utilities--ColumnGap));
  padding-inline-end: var(--#{$text-input-group}__utilities--PaddingInlineEnd, var(--#{$text-input-group}__utilities--ColumnGap));

  .#{$button} + .#{$button} {
    margin-inline-start: calc(var(--#{$text-input-group}__utilities--ColumnGap) * -1); // offset adjacent buttons
  }

  &:is(:last-child) {
    padding-inline-end: 0;
  }
}

// - Text input group text
.#{$text-input-group}__text {
  display: inline-grid;
  flex: 1;
  grid-template-areas: "text-input";
  grid-template-columns: 1fr;
}

// - Text input group icon
.#{$text-input-group}__icon {
  position: absolute;
  inset-block-start: 50%;
  inset-inline-start: var(--#{$text-input-group}__icon--Left);
  color: var(--#{$text-input-group}__icon--Color);
  transform: translateY(var(--#{$text-input-group}__icon--TranslateY));
}

// - Text input group text ihput
.#{$text-input-group}__text-input {
  @include pf-v5-text-overflow;

  width: 100%;
  min-width: var(--#{$text-input-group}__text-input--MinWidth);
  padding-block-start: var(--#{$text-input-group}__text-input--PaddingBlockStart, var(--#{$text-input-group}__text-input--PaddingBlock));
  padding-block-end: var(--#{$text-input-group}__text-input--PaddingBlockEnd, var(--#{$text-input-group}__text-input--PaddingBlock));
  padding-inline-start: var(--#{$text-input-group}__text-input--PaddingInlineStart, var(--#{$text-input-group}__text-input--PaddingInline));
  padding-inline-end: var(--#{$text-input-group}__text-input--PaddingInlineEnd, var(--#{$text-input-group}__text-input--PaddingInline));
  color: inherit;
  background-color: var(--#{$text-input-group}__text-input--BackgroundColor);
  border: 0;
  border-radius: inherit;
  outline: none;

  &,
  &.pf-m-hint {
    grid-area: text-input;
  }

  &.pf-m-hint {
    color: var(--#{$text-input-group}__text-input--m-hint--Color);
  }

  &::placeholder {
    color: var(--#{$text-input-group}__text-input--placeholder--Color);
  }
}

// - Text input group text - Text input group utilities where button
.#{$text-input-group}__text,
.#{$text-input-group}__utilities > :where(.#{$button}) {
  border-start-start-radius: var(--#{$text-input-group}--BorderStartStartRadius);
  border-start-end-radius: var(--#{$text-input-group}--BorderStartEndRadius);
  border-end-start-radius: var(--#{$text-input-group}--BorderEndStartRadius);
  border-end-end-radius: var(--#{$text-input-group}--BorderEndEndRadius);
}

// - Text input group main first child
.#{$text-input-group}__main:first-child > :first-child {
  --#{$text-input-group}--BorderStartStartRadius: var(--#{$text-input-group}--BorderRadius);
  --#{$text-input-group}--BorderEndStartRadius: var(--#{$text-input-group}--BorderRadius);
}

// - Text input group main last child
.#{$text-input-group}__main:last-child > :last-child {
  --#{$text-input-group}--BorderEndStartRadius: var(--#{$text-input-group}--BorderRadius);
  --#{$text-input-group}--BorderEndEndRadius: var(--#{$text-input-group}--BorderRadius);
}

// - Text input group utilities where last child
.#{$text-input-group}__utlities > .#{$button}:where(:last-child) {
  --#{$text-input-group}--BorderEndStartRadius: var(--#{$text-input-group}--BorderRadius);
  --#{$text-input-group}--BorderEndEndRadius: var(--#{$text-input-group}--BorderRadius);
}

// - Text input group main - Text input group utilities only child
.#{$text-input-group}__main,
.#{$text-input-group}__utilities:only-child :where(.#{$button}) {
  &:only-child {
    --#{$text-input-group}--BorderStartStartRadius: var(--#{$text-input-group}--BorderRadius);
    --#{$text-input-group}--BorderStartEndRadius: var(--#{$text-input-group}--BorderRadius);
    --#{$text-input-group}--BorderEndStartRadius: var(--#{$text-input-group}--BorderRadius);
    --#{$text-input-group}--BorderEndEndRadius: var(--#{$text-input-group}--BorderRadius);
  }
}
