@use '../../sass-utilities' as *;

$pf-v6-c-description-list--breakpoint-map: build-breakpoint-map("base", "sm", "md", "lg", "xl", "2xl");
$pf-v6-c-description-list--term-width: 12ch;

@include pf-root($description-list) {
  --#{$description-list}--RowGap: var(--pf-t--global--spacer--lg);
  --#{$description-list}--ColumnGap: var(--pf-t--global--spacer--lg);
  --#{$description-list}--GridTemplateColumns--count: 1;
  --#{$description-list}--GridTemplateColumns--width: 1fr;
  --#{$description-list}--GridTemplateColumns--min: 0;

  // group
  --#{$description-list}__group--RowGap: var(--pf-t--global--spacer--sm);
  --#{$description-list}__group--ColumnGap: var(--pf-t--global--spacer--sm);
  --#{$description-list}__group--GridTemplateRows: auto 1fr;
  --#{$description-list}__group--GridColumn: auto;

  // compact
  --#{$description-list}--m-compact--RowGap: var(--pf-t--global--spacer--md);
  --#{$description-list}--m-compact--ColumnGap: var(--pf-t--global--spacer--sm);

  // term
  --#{$description-list}__term--Display: inline;
  --#{$description-list}__term--sm--Display: flex;
  --#{$description-list}__term--FontWeight: var(--pf-t--global--font--weight--body--bold);
  --#{$description-list}__term--FontSize: var(--pf-t--global--font--size--body--sm);
  --#{$description-list}__term--LineHeight: var(--pf-t--global--font--line-height--body);
  --#{$description-list}__term--width--base: 12ch;

  @media screen and (min-width: $pf-v6-global--breakpoint--sm) {
    --#{$description-list}__term--Display: var(--#{$description-list}__term--sm--Display);
  }

  // icon
  --#{$description-list}__term-icon--MinWidth: var(--pf-t--global--font--size--body--sm);
  --#{$description-list}__term-icon--MarginInlineEnd: var(--pf-t--global--spacer--sm);
  --#{$description-list}__term-icon--Color: var(--pf-t--global--icon--color--subtle);

  // horizontal
  --#{$description-list}__description--width: minmax(10ch, auto);

  // auto-fit
  --#{$description-list}--m-auto-fit--GridTemplateColumns--min--base: #{pf-size-prem(250px)};

  // help text
  --#{$description-list}__text--m-help-text--TextDecorationLine: var(--pf-t--global--text-decoration--help-text--line--default);
  --#{$description-list}__text--m-help-text--TextDecorationStyle: var(--pf-t--global--text-decoration--help-text--style--default);
  --#{$description-list}__text--m-help-text--TextUnderlineOffset: #{pf-size-prem(4px)};
  --#{$description-list}__text--m-help-text--hover--TextDecorationLine: var(--pf-t--global--text-decoration--help-text--line--hover);
  --#{$description-list}__text--m-help-text--hover--TextDecorationStyle: var(--pf-t--global--text-decoration--help-text--style--hover);

  // Display modifiers
  --#{$description-list}--m-display-lg__description--FontSize: var(--pf-t--global--font--size--body--lg); // TODO replace with new font tokens when available
  --#{$description-list}--m-display-2xl__description--FontSize: var(--pf-t--global--font--size--heading--lg); // TODO replace with new font tokens when available

  @include pf-v6-output-root-variables("--#{$description-list}__term--width", $breakpoint-map: $pf-v6-c-description-list--breakpoint-map);
  @include pf-v6-build-css-variable-stack("--#{$description-list}__term--width", "--#{$description-list}__term--width--base", $breakpoint-map: $pf-v6-c-description-list--breakpoint-map);
  @include pf-v6-build-css-variable-stack("--#{$description-list}--m-auto-fit--GridTemplateColumns--min", "--#{$description-list}--m-auto-fit--GridTemplateColumns--min--base", $pf-v6-c-description-list--breakpoint-map);
}

.#{$description-list} {
  display: grid;
  grid-template-columns: repeat(var(--#{$description-list}--GridTemplateColumns--count), var(--#{$description-list}--GridTemplateColumns--width));
  row-gap: var(--#{$description-list}--RowGap);
  column-gap: var(--#{$description-list}--ColumnGap);
  align-items: baseline;

  &.pf-m-inline-grid {
    display: inline-grid;
  }

  &.pf-m-compact {
    --#{$description-list}--RowGap: var(--#{$description-list}--m-compact--RowGap);
    --#{$description-list}--ColumnGap: var(--#{$description-list}--m-compact--ColumnGap);
  }

  &.pf-m-fill-columns {
    display: block;
    column-count: var(--#{$description-list}--GridTemplateColumns--count);
    margin-block-end: calc(var(--#{$description-list}--RowGap) * -1);

    > .#{$card},
    > .#{$description-list}__group {
      display: inline-grid;
      width: 100%;
      margin-block-end: var(--#{$description-list}--RowGap);
      break-inside: avoid;
      page-break-inside: avoid;

      // stylelint-disable property-no-vendor-prefix
      -webkit-column-break-inside: avoid;
      -moz-column-break-inside: avoid;
      // stylelint-enable
    }
  }

  &.pf-m-display-lg {
    --#{$description-list}__description--FontSize: var(--#{$description-list}--m-display-lg__description--FontSize);
  }

  &.pf-m-display-2xl {
    --#{$description-list}__description--FontSize: var(--#{$description-list}--m-display-2xl__description--FontSize);
  }

  > .#{$card} {
    align-self: stretch;
    padding-block-start: var(--#{$card}--first-child--PaddingBlockStart);
    padding-block-end: var(--#{$card}--child--PaddingBlockEnd);
    padding-inline-start: var(--#{$card}--child--PaddingInlineStart);
    padding-inline-end: var(--#{$card}--child--PaddingInlineEnd);
  }
}

.#{$description-list}__group,
.#{$description-list} > .#{$card} {
  display: grid;
  grid-template-rows: var(--#{$description-list}__group--GridTemplateRows);
  grid-template-columns: auto;
  grid-column: var(--#{$description-list}__group--GridColumn);
  row-gap: var(--#{$description-list}__group--RowGap);
  column-gap: var(--#{$description-list}__group--ColumnGap);
  align-items: baseline;
}

.#{$description-list}__term,
.#{$description-list}__description {
  min-width: 0; // this allows overflow-wrap to work
  text-align: start;
  overflow-wrap: break-word;
}

.#{$description-list}__term {
  display: var(--#{$description-list}__term--Display);
  font-size: var(--#{$description-list}__term--FontSize);
  font-weight: var(--#{$description-list}__term--FontWeight);
  line-height: var(--#{$description-list}__term--LineHeight);

  .#{$description-list}__text {
    display: inline;
  }
}

.#{$description-list}__term-icon {
  flex-shrink: 0;
  min-width: var(--#{$description-list}__term-icon--MinWidth);
  margin-inline-end: var(--#{$description-list}__term-icon--MarginInlineEnd);
  color: var(--#{$description-list}__term-icon--Color);
}

.#{$description-list}__description {
  font-size: var(--#{$description-list}__description--FontSize, inherit);
}

.#{$description-list}__text {
  min-width: 0; // this allows overflow-wrap to work

  &.pf-m-help-text {
    text-decoration: var(--#{$description-list}__text--m-help-text--TextDecorationLine) var(--#{$description-list}__text--m-help-text--TextDecorationStyle);
    text-underline-offset: var(--#{$description-list}__text--m-help-text--TextUnderlineOffset);
    cursor: pointer;

    &:is(:hover, :focus) {
      --#{$description-list}__text--m-help-text--TextDecorationLine: var(--#{$description-list}__text--m-help-text--hover--TextDecorationLine);
      --#{$description-list}__text--m-help-text--TextDecorationStyle: var(--#{$description-list}__text--m-help-text--hover--TextDecorationStyle);
    }
  }
}

// Responsive modifiers
// stylelint-disable no-duplicate-selectors
.#{$description-list} {
  @each $breakpoint, $breakpoint-value in $pf-v6-c-description-list--breakpoint-map {
    $breakpoint-name: if($breakpoint != "base", -on-#{$breakpoint}, "");

    @include pf-v6-apply-breakpoint($breakpoint) {
      &.pf-m-1-col#{$breakpoint-name} {
        --#{$description-list}--GridTemplateColumns--count: 1;
      }

      &.pf-m-2-col#{$breakpoint-name} {
        --#{$description-list}--GridTemplateColumns--count: 2;
      }

      &.pf-m-3-col#{$breakpoint-name} {
        --#{$description-list}--GridTemplateColumns--count: 3;
      }

      &.pf-m-horizontal#{$breakpoint-name} {
        > .#{$card},
        > .#{$description-list}__group {
          grid-template-rows: auto;
          grid-template-columns: var(--#{$description-list}__term--width) var(--#{$description-list}__description--width); // use --#{$description-list}__term--width here as it is re-defined on line 45
        }
      }

      &.pf-m-vertical#{$breakpoint-name} {
        > .#{$card},
        > .#{$description-list}__group {
          grid-template-rows: auto 1fr;
          grid-template-columns: repeat(var(--#{$description-list}--GridTemplateColumns--count));
        }
      }
    }
  }

  &.pf-m-auto-column-widths {
    grid-template-columns: repeat(var(--#{$description-list}--GridTemplateColumns--count), minmax(8ch, max-content));
  }

  &.pf-m-auto-fit {
    grid-template-columns: repeat(auto-fit, minmax(var(--#{$description-list}--m-auto-fit--GridTemplateColumns--min), 1fr));
  }

  &.pf-m-fluid {
    > .#{$card},
    > .#{$description-list}__group {
      grid-template-columns: fit-content(20ch) auto;
    }
  }
}
// stylelint-enable
