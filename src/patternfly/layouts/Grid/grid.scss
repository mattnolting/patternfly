@use '../../sass-utilities' as *;

$pf-v6-l-grid--breakpoint-map: build-breakpoint-map(); // currently only used for css variable stack

// Grid base
@include pf-root($grid) {
  --#{$grid}--m-gutter--GridGap: var(--pf-t--global--spacer--gutter--default);
  --#{$grid}--item--Order: 0;
}

.#{$grid} {
  display: grid;
  grid-template-columns: repeat(12, [col-start] 1fr);

  .#{$grid},
  .#{$grid}__item {
    grid-column-start: auto;
    grid-column-end: span 12;
    min-width: 0;
    min-height: 0;

    @include pf-v6-build-css-variable-stack("order", "--#{$grid}--item--Order", $pf-v6-l-grid--breakpoint-map);
  }

  // Loop through $breakpoints map to generate responsive classes
  @each $breakpoint, $value in $pf-v6-global--breakpoint-map {
    @include pf-v6-media-query($breakpoint) {
      @for $col-num from 1 through 12 {
        &.pf-m-all-#{$col-num}-col#{$value} {
          > .#{$grid},
          > .#{$grid}__item {
            grid-column-end: span #{$col-num};
          }
        }
      }
    }
  }

  // Loop through $breakpoints map to generate responsive classes
  @each $breakpoint, $value in $pf-v6-global--breakpoint-map {
    @include pf-v6-media-query($breakpoint) {
      @for $col-num from 1 through 12 {
        > .#{$grid}.pf-m-#{$col-num}-col#{$value},
        > .#{$grid}__item.pf-m-#{$col-num}-col#{$value} {
          grid-column-end: span #{$col-num};
        }
      }

      // generate column offset modfiers
      @for $col-num from 1 through 12 {
        > .pf-m-offset-#{$col-num}-col#{$value} {
          grid-column-start: col-start calc(#{$col-num} + 1);
        }
      }

      // generate row span modfiers
      @for $row-num from 1 through 12 {
        > .pf-m-#{$row-num}-row#{$value} {
          grid-row: span #{$row-num};
        }
      }
    }
  }

  &.pf-m-gutter {
    grid-gap: var(--#{$grid}--m-gutter--GridGap);
  }
}
